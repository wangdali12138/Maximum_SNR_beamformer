root = argv(){1};
geometry = argv(){2};
N = str2num(argv(){3});

rooms = [ 5 10 5 10 2 5 ];
betas = [ 0.2 0.8 ];
speeds = [ 340.0 355.0 ];
fs = 16000;
margin = 0.5;
dists = [ 1.0 5.0 ];
counts = [ 2 2 ];
noises = [ 0.0005 0.002 ];
dtdoa = 1.0;

if strcmp(geometry, 'pair')
    mics = [ -0.5 0.0 0.0 ; 0.5 0.0 0.0 ];
    scales = [ 0.04 0.20 ];
end

if strcmp(geometry, 'respeaker_usb')
    mics = [ -0.0229 -0.0229 0.0 ; ...
             -0.0229 +0.0229 0.0 ; ...
             +0.0229 -0.0229 0.0 ; ...
             +0.0229 +0.0229 0.0 ];
    scales = [ 1.0 1.0 ];
end

if strcmp(geometry, 'respeaker_core')
    mics = [ +0.0463 +0.0000 0.0 ; ...
             +0.0232 +0.0401 0.0 ; ...
             -0.0232 +0.0401 0.0 ; ...
             -0.0463 +0.0000 0.0 ; ...
             -0.0232 -0.0401 0.0 ; ...
             +0.0232 -0.0401 0.0 ];
    scales = [ 1.0 1.0 ];
end

if strcmp(geometry, 'matrix_creator')
    mics = [ +0.0201 -0.0485 0.0 ; ...
             -0.0201 -0.0485 0.0 ; ...
             -0.0485 -0.0201 0.0 ; ...
             -0.0485 +0.0201 0.0 ; ...
             -0.0201 +0.0485 0.0 ; ...
             +0.0201 +0.0485 0.0 ; ...
             +0.0485 +0.0201 0.0 ; ...
             +0.0485 -0.0201 0.0 ];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'matrix_voice')
    mics = [ +0.0000 +0.0000 0.0 ; ...
             -0.0381 +0.0036 0.0 ; ...
             -0.0210 +0.0320 0.0 ; ...
             +0.0120 +0.0364 0.0 ; ...
             +0.0359 +0.0133 0.0 ; ...
             +0.0328 -0.0198 0.0 ; ...
             +0.0050 -0.0380 0.0 ; ...
             -0.0266 -0.0276 0.0 ];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'minidsp_uma')
    mics = [ +0.0000 +0.0000 0.0 ; ...
             +0.0000 +0.0430 0.0 ; ...
             +0.0370 +0.0210 0.0 ; ...
             +0.0370 -0.0210 0.0 ; ...
             +0.0000 -0.0430 0.0 ; ...
             -0.0370 -0.0210 0.0 ; ...
             -0.0370 +0.0210 0.0 ];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'microsoft_kinect')
    mics = [ -0.1130 +0.0000 0.0 ; ...
             +0.0360 +0.0000 0.0 ; ...
             +0.0760 +0.0000 0.0 ; ...
             +0.1130 +0.0000 0.0 ];
    scales = [ 1.0 1.0 ];             
end
if strcmp(geometry, 'cube_shape')
    mics = [ -0.0300 -0.0300 -0.0300 ; ...
             -0.0300  0.0000 -0.0300 ; ...
             -0.0300 +0.0300 -0.0300 ; ...
              0.0000 -0.0300 -0.0300 ; ...
              0.0000  0.0000 -0.0300 ; ...
              0.0000 +0.0300 -0.0300 ; ...
             +0.0300 -0.0300 -0.0300 ; ...
             +0.0300  0.0000 -0.0300 ; ...
             +0.0300 +0.0300 -0.0300 ; ...
             -0.0300 -0.0300  0.0000 ; ...
             -0.0300  0.0000  0.0000 ; ...
             -0.0300 +0.0300  0.0000 ; ...
              0.0000 -0.0300  0.0000 ; ...
              0.0000  0.0000  0.0000 ; ...
              0.0000 +0.0300  0.0000 ; ...
             +0.0300 -0.0300  0.0000 ; ...
             +0.0300  0.0000  0.0000 ; ...
             +0.0300 +0.0300  0.0000 ; ...
             -0.0300 -0.0300 +0.0300 ; ...
             -0.0300  0.0000 +0.0300 ; ...
             -0.0300 +0.0300 +0.0300 ; ...
              0.0000 -0.0300 +0.0300 ; ...
              0.0000  0.0000 +0.0300 ; ...
              0.0000 +0.0300 +0.0300 ; ...
             +0.0300 -0.0300 +0.0300 ; ...
             +0.0300  0.0000 +0.0300 ; ...
             +0.0300 +0.0300 +0.0300 ];
    scales = [1.0 1,0];
end
if strcmp(geometry, 'cube_shape_2f')
    mics = [ -0.0300 -0.0300  0.0000 ; ...
             -0.0300  0.0000  0.0000 ; ...
             -0.0300 +0.0300  0.0000 ; ...
              0.0000 -0.0300  0.0000 ; ...
              0.0000  0.0000  0.0000 ; ...
              0.0000 +0.0300  0.0000 ; ...
             +0.0300 -0.0300  0.0000 ; ...
             +0.0300  0.0000  0.0000 ; ...
             +0.0300 +0.0300  0.0000 ; ...
             -0.0300 -0.0300 +0.0300 ; ...
             -0.0300  0.0000 +0.0300 ; ...
             -0.0300 +0.0300 +0.0300 ; ...
              0.0000 -0.0300 +0.0300 ; ...
              0.0000  0.0000 +0.0300 ; ...
              0.0000 +0.0300 +0.0300 ; ...
             +0.0300 -0.0300 +0.0300 ; ...
             +0.0300  0.0000 +0.0300 ; ...
             +0.0300 +0.0300 +0.0300 ];
    scales = [1.0 1,0];
end

if strcmp(geometry, 'spherical_shape')
    mics = [ -0.0042 -0.0227  0.0192 ; ...
             -0.0103  0.0084 -0.0269 ; ...
             -0.0164  0.0104  0.0229 ; ...
             -0.0087 -0.0068  0.0279 ; ...
              0.0043 -0.0245 -0.0167 ; ...
              0.0176 -0.0106 -0.0219 ; ...
             -0.0280  0.0067  0.0084 ; ...
             -0.0281 -0.0099 -0.0034 ; ...
             -0.0262  0.0084 -0.0120 ; ...
              0.0194  0.0078  0.0215 ; ...
              0.0011 -0.0300  0.0010 ; ...
              0.0105 -0.0090  0.0266 ; ...
              0.0002  0.0299 -0.0019 ; ...
              0.0236  0.0088 -0.0163 ; ...
             -0.0024 -0.0108 -0.0279 ; ...
             -0.0234 -0.0093  0.0163 ; ...
              0.0179  0.0238 -0.0037 ; ...
              0.0144 -0.0227  0.0133 ; ...
             -0.0084  0.0251  0.0142 ; ...
              0.0069  0.0217 -0.0195 ; ...
             -0.0201 -0.0071 -0.0211 ; ...
              0.0289 -0.0056 -0.0060 ; ...
              0.0086  0.0054 -0.0282 ; ...
              0.0274  0.0112  0.0048 ; ...
              0.0261 -0.0080  0.0125 ; ...
             -0.0141 -0.0230 -0.0132 ; ...
             -0.0119  0.0228 -0.0155 ; ...
             -0.0173 -0.0239  0.0054 ; ...
              0.0105  0.0235  0.0155 ; ...
              0.0198 -0.0220 -0.0050 ; ...
             -0.0204  0.0220  0.0012 ; ...
              0.0019  0.0102  0.0282];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'cylindrical_3f')
    mics = [ +0.0201 -0.0485 +0.0300 ; ...
             -0.0201 -0.0485 +0.0300 ; ...
             -0.0485 -0.0201 +0.0300 ; ...
             -0.0485 +0.0201 +0.0300 ; ...
             -0.0201 +0.0485 +0.0300 ; ...
             +0.0201 +0.0485 +0.0300 ; ...
             +0.0485 +0.0201 +0.0300 ; ...
             +0.0485 -0.0201 +0.0300 ; ...
             +0.0201 -0.0485  0.0000 ; ...
             -0.0201 -0.0485  0.0000 ; ...
             -0.0485 -0.0201  0.0000 ; ...
             -0.0485 +0.0201  0.0000 ; ...
             -0.0201 +0.0485  0.0000 ; ...
             +0.0201 +0.0485  0.0000 ; ...
             +0.0485 +0.0201  0.0000 ; ...
             +0.0485 -0.0201  0.0000 ; ...
             +0.0201 -0.0485 -0.0300 ; ...
             -0.0201 -0.0485 -0.0300 ; ...
             -0.0485 -0.0201 -0.0300 ; ...
             -0.0485 +0.0201 -0.0300 ; ...
             -0.0201 +0.0485 -0.0300 ; ...
             +0.0201 +0.0485 -0.0300 ; ...
             +0.0485 +0.0201 -0.0300 ; ...
             +0.0485 -0.0201 -0.0300 ];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'cylindrical_2f')
    mics = [ +0.0201 -0.0485 +0.0300 ; ...
             -0.0201 -0.0485 +0.0300 ; ...
             -0.0485 -0.0201 +0.0300 ; ...
             -0.0485 +0.0201 +0.0300 ; ...
             -0.0201 +0.0485 +0.0300 ; ...
             +0.0201 +0.0485 +0.0300 ; ...
             +0.0485 +0.0201 +0.0300 ; ...
             +0.0485 -0.0201 +0.0300 ; ...
             +0.0201 -0.0485  0.0000 ; ...
             -0.0201 -0.0485  0.0000 ; ...
             -0.0485 -0.0201  0.0000 ; ...
             -0.0485 +0.0201  0.0000 ; ...
             -0.0201 +0.0485  0.0000 ; ...
             +0.0201 +0.0485  0.0000 ; ...
             +0.0485 +0.0201  0.0000 ; ...
             +0.0485 -0.0201  0.0000 ];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'arbitraryshape_6')
    mics = [ +0.1392 +0.2734 +0.4787 ; ...
             +0.0788 +0.4852 +0.4785 ;...
             +0.2426 +0.4001 +0.0709 ; ...
             +0.2108 +0.4578 +0.3961 ; ...
             +0.4797 +0.3278 +0.01785 ; ...
             +0.4245 +0.4669 +0.3393];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'arbitraryshape_8')
    mics = [ +0.3715 +0.1961 +0.3277 ;...
             +0.3530 +0.0159 +0.1384 ;...
             +0.0230 +0.0485 +0.4117 ;...
             +0.3474 +0.1585 +0.4751 ;...
             +0.0172 +0.2193 +0.1907 ;...
             +0.3827 +0.3975 +0.0934 ;...
             +0.2448 +0.2227 +0.3231 ;...
             +0.3546 +0.3773 +0.1380];
    scales = [ 1.0 1.0 ];             
end

if strcmp(geometry, 'arbitraryshape_12')
    mics = [+0.3275  +0.0813  +0.0595 ;...
            +0.4799  +0.1702  +0.2926 ;...
            +0.1119  +0.3756  +0.1275 ;...
            +0.2530  +0.3495  +0.4455 ;...
            +0.4796  +0.2736  +0.0693 ;...
            +0.0746  +0.1288  +0.4204 ;...
            +0.1271  +0.4071  +0.1218 ;...
            +0.4646  +0.1750  +0.0983 ;...
            +0.1255  +0.3080  +0.2366 ;...
            +0.1758  +0.4154  +0.2926 ;...
            +0.2749  +0.4586  +0.1429 ;...
            +0.3786  +0.3769  +0.1902];
    scales = [ 1.0 1.0 ];             
end

for n = 1:1:N

    disp(n);

    params = rir_setup(rooms, betas, speeds, mics, scales, fs, margin, dists, counts, noises, dtdoa);
    json = rir_json(params);
    wave = rir_wave(params);

    id = ('a':'z')(randi([1 26],1,10));
    path = [ root id(1) '/' id(2) '/' id ];

    disp([path '.json']);
    
    fid = fopen([path '.json'], 'w');
    fprintf(fid, json);
    fclose(fid);

    audiowrite([path '.wav'], wave', fs);
    
end